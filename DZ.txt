
1 Отличия между PHP 5.6 и 7?
    
    Изменения, ломающие обратную совместимость (http://php.net/manual/ru/migration70.incompatible.php)

        Изменения foreach
            foreach больше не изменяет внутренний указатель массива
            foreach по значениям оперирует копией массива
            Для foreach по ссылке улучшили поведение при итерации

        Изменение в делении на ноль
            Теперь оператор деления возвращает число с плавающей запятой, равное +INF, -INF или NAN, как определено в IEEE 754. (вместо ошибки уровня E_WARNING и возврата значения false)

        Следующие имена нельзя использовать для классов, интерфейсов и трейтов:
            bool, int, float, NULL, TRUE, FALSE
        Следующие имена зарезервированы на будущее и должны считаться устаревшими:
            resource, object, mixed, numeric

        Удалены PHP-теги ASP и script (<% %>, <%= %>, <script language="php"> </script>)

        Функции не могут иметь несколько параметров с одинаковыми именами (E_COMPILE_ERROR)

        Оператор switch больше не может иметь несколько блоков default (E_COMPILE_ERROR)

        Изменение порядка обработки операторов break и switch
            Операторы break и continue вне цикла или управляющей структуры switch теперь обрабатываются во время компиляции, а не во время выполнения, как это было ранее, поэтому выдают ошибки уровня E_COMPILE_ERROR.
    
    Новая функциональность (http://php.net/manual/ru/migration70.new-features.php)

        typehinting 
            Объявления скалярных типов (расширен) и Объявления возвращаемых значений (нововведение)
            ведены в двух вариантах: принудительный (по умолчанию) и строгий ( declare(strict_types=1); ).

        Синтаксический сахар:
            Оператор объединения с null (??)
            Оператор spaceship (космический корабль) (<=>)

        Определение констант массивов с помощью define()
            Можно определить константу типа array с помощью функции define(). В PHP 5.6 такие константы можно было задавать только с помощью const. 

        Анонимные классы (new class)
            Используется тогда, когда нужен одноразовый класс и создавать полноценный класс, а потом его объект не имеет смысла

2 Чем отличается __autoload от spl_autoload_register?
    (http://php.net/manual/ru/language.oop5.autoload.php)
    В то время как функция __autoload() также может быть использована для автоматической загрузки классов и интерфейсов, следует отдать предпочтение spl_autoload_register(), потому, что она предоставляет гораздо более гибкую альтернативу, позволяя регистрировать необходимое количество автозагрузчиков, например, для сторонних библиотек. По этой причине использование __autoload() не рекомендуется, а c PHP 7.2.0 объявлено устаревшим.
    Относится к разделу стандартных библиотек PHP (SPL)

3 Что такое ECMAScript? Чем он отличается от JavaScript?
    (https://habr.com/ru/company/nixsolutions/blog/342904/)
    ECMAScript (ECMA-262) - спецификация создания скриптового языка общего назначения, созданная в результате стандартизации скриптовых языков(JavaScript(1996год) и JScript от Microsoft).
    JavaScript - один из скриптовых языков, реализующих стандарт ECMAScript

4 Какие типы БД вы знаете?
    Реляционные БД (?MySQL?, ?Oracle?)
    Документо-ориентированные (?MongoDB?)
    Объектно-ориентированные (?Postgre?)

5 Для чего нужны составные индексы в БД?
    Составные индексы применяются для повышения эффективности запросов вида WHERE ... AND ... и WHERE ... ORDER BY ...